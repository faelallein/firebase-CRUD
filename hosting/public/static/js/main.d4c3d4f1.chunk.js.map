{"version":3,"sources":["firebase.js","util/RequestFir.js","context/tasks.js","components/AddTask/AddTask.js","components/ListTask/components/Task.js","components/ListTask/components/DoneTask.js","components/ListTask/ListTask.js","components/Todo.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","requestFirebase","ref","data","Promise","resolve","reject","fref","update","col","once","then","s","value","val","remove","TaskContext","createContext","useTasks","context","useContext","tasks","setTasks","AddTask","React","useState","task","do","setTask","Container","Row","fluid","className","Col","md","Form","Group","Label","Control","type","name","onInput","e","target","id","Button","variant","onClick","a","async","child","push","key","auxTasks","document","querySelector","add","Task","keyId","dataUnq","edit","done","auxTask","openEdit","deletar","colSpan","onChange","closeEdit","DoneTask","style","color","ListTask","useEffect","height","overflowY","Table","responsive","Object","values","reverse","map","index","keys","Todo","App","ReactDOM","render","children","Provider","getElementById"],"mappings":"oPAYAA,IAASC,cAVM,CACXC,OAAQ,0CACRC,WAAY,kCACZC,YAAa,yCACbC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,8CAKIR,QAAf,E,wCCbMS,EAAWT,EAASS,WAEbC,EAYD,SAACC,EAAKC,GACV,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzB,IAAMC,EAAOP,EAASE,MAElBM,EAAS,GACbA,EAAON,GAAOC,EAEdI,EAAKC,OAAOA,GACZH,EAAQ,cApBPJ,EAuBJ,SAACQ,GACF,OAAO,IAAIL,SAAQ,SAACC,EAASC,GACZN,EAASE,IAAIO,GAErBC,KAAK,SAASC,MAAK,SAAAC,GACpB,IAAIC,EAAQD,EAAEE,MACdT,EAAQQ,UA7BXZ,EAiCJ,SAACC,GACF,OAAO,IAAIE,SAAQ,SAACC,EAASC,GACZN,EAASE,IAAT,iBAAuBA,IAE/Ba,SACLV,EAAQ,gBCvCPW,EAAcC,0BAcpB,SAASC,IACZ,IAAMC,EAAUC,qBAAWJ,GAE3B,MAAO,CAAEK,MADmBF,EAApBE,MACQC,SADYH,EAAbG,UCuCJC,MA/Cf,WAAoB,IAAD,EACaL,IAApBG,EADO,EACPA,MAAOC,EADA,EACAA,SADA,EAEYE,IAAMC,SAAS,CACtCC,KAAO,GACPC,IAAK,IAJM,mBAEPD,EAFO,KAEAE,EAFA,KA2Bf,OAAO,kBAACC,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAKC,MAAM,KAAKC,UAAU,6BACtB,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACJ,kBAACC,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,MAAN,CAAYF,GAAG,KAEX,kBAACC,EAAA,EAAKE,MAAN,cACA,kBAACF,EAAA,EAAKG,QAAN,CAAcC,KAAK,OAAOC,KAAK,YAAYC,QAAS,SAAAC,GAAC,OAAId,EAAQ,eAAIF,EAAL,CAAYA,KAAOgB,EAAEC,OAAO9B,UAAS+B,GAAG,cACxG,6BAEA,kBAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUP,KAAK,SAASQ,QAAS,kBA9B7D,4BAAAC,EAAAC,OAAA,kEAAAD,EAAA,MAEQzD,EAASS,WAAWE,MAAMgD,MAAM,SAASC,OAAOC,KAFxD,cAEJA,EAFI,QAKJC,EAAWhC,GACN+B,GAAO1B,EAChBJ,EAAS,eAAK+B,IAPN,WAAAL,EAAA,MAUF/C,EAAA,iBAAiCmD,GAAO1B,IAVtC,OAaR4B,SAASC,cAAc,cAAc1C,MAAQ,GAC7Ce,EAAQ,CACJF,KAAM,GACNC,IAAI,IAhBA,sCA8BmE6B,KAAvD,mB,QC2BbC,MAjEf,YAAmC,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,QAAW,EACFzC,IAApBG,EADsB,EACtBA,MAAOC,EADe,EACfA,SADe,EAEJE,IAAMC,SAASkC,EAAQjC,MAFnB,mBAEtBA,EAFsB,KAEhBE,EAFgB,KA+C9B,OAAoB,IAAjB+B,EAAQC,KACA,wBAAIR,IAAKM,GACZ,4BAAKC,EAAQjC,MACb,4BAAI,kBAACmB,EAAA,EAAD,CAAQC,QAAQ,OAAOC,QAAS,kBApC/B,SAAC7C,EAAKC,GAEfF,EAAA,iBAAiCC,EAAjC,oBAA8CC,EAA9C,CAAoDwB,IAAI,KAGxD,IAAI0B,EAAWhC,EACfgC,EAASnD,GAAKyB,IAAK,EACnBL,EAAS,eAAK+B,IA6BgCQ,CAAKH,EAAOC,KAAlD,OACJ,4BAAI,kBAACd,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAAS,kBA3B9B,SAAC7C,GAEd,IAAI4D,EAAUzC,EACdyC,EAAQ5D,GAAK0D,MAAO,EACpBtC,EAAS,eAAKwC,IAuBmCC,CAASL,KAAlD,SACJ,4BAAI,kBAACb,EAAA,EAAD,CAAQC,QAAQ,SAASC,QAAS,kBAhD9B,SAAC7C,GAEbD,EAAoBC,GAGpB,IAAImD,EAAWhC,SACRgC,EAASnD,GAChBoB,EAAS,eAAK+B,IAyCkCW,CAAQN,KAAhD,YAGD,wBAAIN,IAAKM,GACZ,wBAAIO,QAAQ,KACR,kBAAC9B,EAAA,EAAKG,QAAN,CAAcC,KAAK,OAAO1B,MAAOa,EAAMwC,SAAU,SAAAxB,GAf1C,IAAC7B,IAe0D6B,EAAEC,OAAO9B,MAdnFe,EAAQf,OAgBJ,4BAAI,kBAACgC,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAAS,kBA5B7B,SAAC7C,EAAKC,GAEpB,IAAI2D,EAAUzC,SACPyC,EAAQ5D,GAAK0D,KACpBE,EAAQ5D,GAAKwB,KAAOA,EACpBJ,EAAS,eAAKwC,IAGd7D,EAAA,iBAAiCC,EAAjC,oBAA8CC,EAA9C,CAAoDuB,KAAMA,KAoBTyC,CAAUT,EAAOC,KAA1D,WC1DDS,MANf,YAAuC,IAAnBV,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,QACvB,OAAO,wBAAIP,IAAKM,GACZ,wBAAIO,QAAQ,KAAI,4BAAQI,MAAO,CAAEC,MAAO,SAAWX,EAAQjC,SC8CpD6C,MAzCf,WAAqB,IAAD,EACYrD,IAApBG,EADQ,EACRA,MAAOC,EADC,EACDA,SAOf,OALAE,IAAMgD,WAAU,WAEZvE,IAAsBU,MAAK,SAACC,GAAOU,EAASV,EAAES,YAChD,CAACC,IAEI,kBAACO,EAAA,EAAD,CAAWwC,MAAO,CAACI,OAAQ,IAAKC,UAAU,WAC7C,kBAAC5C,EAAA,EAAD,CAAKC,MAAM,KAAKC,UAAU,6BACtB,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACJ,kBAACyC,EAAA,EAAD,CAAOC,WAAW,MAClB,+BACI,4BACI,oCACA,kCACA,oCACA,wCAGR,+BACmB,KAAVvD,EAAewD,OAAOC,OAAOzD,GAAO0D,UAAUC,KAAI,SAACA,EAAKC,GACrD,OAAc,IAAXD,EAAIrD,GAEI,kBAAC,EAAD,CAAUyB,IAAKyB,OAAOK,KAAK7D,GAAO0D,UAAUE,GAAQvB,MAAOmB,OAAOK,KAAK7D,GAAO0D,UAAUE,GAAQtB,QAASqB,IAGzG,kBAAC,EAAD,CAAM5B,IAAKyB,OAAOK,KAAK7D,GAAO0D,UAAUE,GAAQvB,MAAOmB,OAAOK,KAAK7D,GAAO0D,UAAUE,GAAQtB,QAASqB,OAEpH,4BACI,4CC7BbG,MARf,WACI,OAAO,6BACH,6BACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCEOC,MAPf,WACI,OAAS,6BACL,kBAAC,EAAD,QCERC,IAASC,OACL,mBPJW,YAAkC,IAAXC,EAAU,EAAVA,SAAU,EAClB9D,mBAAS,IADS,mBACrCJ,EADqC,KAC9BC,EAD8B,KAG5C,OAAO,kBAACN,EAAYwE,SAAb,CAAsB3E,MAAO,CAChCQ,QACAC,aAECiE,KOHL,KAAc,kBAAC,EAAD,OAChBjC,SAASmC,eAAe,W","file":"static/js/main.d4c3d4f1.chunk.js","sourcesContent":["import firebase from 'firebase'\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyDwNoW7_htpvqSduSl9YgtOXMxhYanqiDw\",\r\n    authDomain: \"todo-list-17248.firebaseapp.com\",\r\n    databaseURL: \"https://todo-list-17248.firebaseio.com\",\r\n    projectId: \"todo-list-17248\",\r\n    storageBucket: \"todo-list-17248.appspot.com\",\r\n    messagingSenderId: \"643932837453\",\r\n    appId: \"1:643932837453:web:768cfaec0aade02915ae04\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(config);\r\n\r\nexport default firebase;","import firebase from '../firebase'\r\nconst database = firebase.database();\r\n\r\nexport const requestFirebase = {\r\n    add: (col, data, key) => {\r\n        return new Promise((resolve, reject) => {\r\n            const fref = database.ref()\r\n\r\n            let update = {}\r\n            update[`/${col}/` + key] = data\r\n\r\n            fref.update(update)\r\n            resolve('Add')\r\n        })\r\n    },\r\n    update: (ref, data) => {\r\n        return new Promise((resolve, reject) => {\r\n            const fref = database.ref()\r\n\r\n            let update = {}\r\n            update[ref] = data\r\n\r\n            fref.update(update)\r\n            resolve('Update')\r\n        })\r\n    },\r\n    get: (col) => {\r\n        return new Promise((resolve, reject) => {\r\n            const fref = database.ref(col)\r\n\r\n            fref.once('value').then(s => {\r\n                let value = s.val()\r\n                resolve(value)\r\n            })\r\n        })\r\n    },\r\n    del: (ref) => {\r\n        return new Promise((resolve, reject) => {\r\n            const fref = database.ref(`/tasks/${ref}`)\r\n\r\n            fref.remove()\r\n            resolve('Deletado')\r\n        })\r\n    }\r\n}","import React, {createContext, useState, useContext } from \"react\";\r\n\r\nexport const TaskContext = createContext();\r\n\r\nexport default function TaskProvider({children}){\r\n    const [tasks, setTasks] = useState('')\r\n\r\n    return <TaskContext.Provider value={{\r\n        tasks,\r\n        setTasks,\r\n    }}>\r\n        {children}\r\n    </TaskContext.Provider>\r\n\r\n}\r\n\r\nexport function useTasks(){\r\n    const context = useContext(TaskContext)\r\n    const { tasks, setTasks } = context;\r\n    return { tasks, setTasks }\r\n}","import React from 'react';\r\nimport firebase from '../../firebase'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { requestFirebase } from '../../util/RequestFir'\r\nimport { useTasks } from '../../context/tasks'\r\n\r\nfunction AddTask() {\r\n    const { tasks, setTasks } = useTasks() \r\n    const [ task , setTask ] = React.useState({\r\n        task : '',\r\n        do : false\r\n    })\r\n\r\n    const add = async () => {\r\n        //cria key direto do firebase\r\n        let key = await firebase.database().ref().child('tasks').push().key\r\n        \r\n        //atualiza o contexto tasks\r\n        let auxTasks = tasks\r\n        auxTasks[key] = task\r\n        setTasks({ ...auxTasks })        \r\n\r\n        //adiciona ao firebase\r\n        await requestFirebase.update(`/tasks/${key}`, task)\r\n        \r\n        //limpa o input e o state\r\n        document.querySelector(\"#inputTask\").value = \"\"\r\n        setTask({\r\n            task: '',\r\n            do: false\r\n        })\r\n    }\r\n\r\n    return <Container>\r\n            <Row fluid=\"md\" className=\"justify-content-md-center\">\r\n                <Col md=\"12\">\r\n                    <Form>\r\n                        <Form.Group md=\"4\">\r\n                            {/* Input de tasks */}\r\n                            <Form.Label>Tasks</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"firstName\" onInput={e => setTask({...task , task : e.target.value})} id=\"inputTask\"/>\r\n                            <br/>\r\n                            {/* Botão de adição das tasks */}\r\n                            <Button variant=\"success\" type=\"button\" onClick={() => add()}>\r\n                                Adicionar\r\n                            </Button>\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n}\r\n\r\nexport default AddTask;","import React from 'react';\r\n//Bootstrap\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\n//Util e Context\r\nimport { requestFirebase } from '../../../util/RequestFir'\r\nimport { useTasks } from '../../../context/tasks'\r\n\r\n\r\nfunction Task({ keyId, dataUnq }) {\r\n    const { tasks, setTasks } = useTasks()\r\n    const [ task, setTask ] = React.useState(dataUnq.task)\r\n\r\n    const deletar = (ref) => {\r\n        //deleta o item do firebase\r\n        requestFirebase.del(ref)\r\n\r\n        //deleta o item da imagem\r\n        let auxTasks = tasks\r\n        delete auxTasks[ref]\r\n        setTasks({ ...auxTasks })\r\n    }\r\n\r\n    const done = (ref, data) => {\r\n        //edita o item do firebase\r\n        requestFirebase.update(`/tasks/${ref}/`, { ...data, do: true })\r\n\r\n        //edit o item da imagem\r\n        let auxTasks = tasks\r\n        auxTasks[ref].do = true\r\n        setTasks({ ...auxTasks })\r\n    }\r\n    \r\n    const openEdit = (ref) => {\r\n        //Liga a edição\r\n        let auxTask = tasks\r\n        auxTask[ref].edit = true\r\n        setTasks({ ...auxTask })\r\n    }\r\n\r\n    const closeEdit = (ref, data) => {\r\n        //atualiza a imagem e desliga a edição\r\n        let auxTask = tasks\r\n        delete auxTask[ref].edit\r\n        auxTask[ref].task = task\r\n        setTasks({ ...auxTask })\r\n\r\n        //edita o item do firebase\r\n        requestFirebase.update(`/tasks/${ref}/`, { ...data, task: task })\r\n    }\r\n\r\n    const handleEdit = (value) => {\r\n        setTask(value)\r\n    }\r\n\r\n\r\n    if(dataUnq.edit !== true){\r\n        return <tr key={keyId}>\r\n            <td>{dataUnq.task}</td>\r\n            <td><Button variant=\"info\" onClick={() => done(keyId, dataUnq)}>Do</Button></td>\r\n            <td><Button variant=\"warning\" onClick={() => openEdit(keyId)}>Edit</Button></td>\r\n            <td><Button variant=\"danger\" onClick={() => deletar(keyId)}>Delete</Button></td>\r\n        </tr>;\r\n    }else{\r\n        return <tr key={keyId}>\r\n            <td colSpan=\"3\">\r\n                <Form.Control type=\"text\" value={task} onChange={e => {handleEdit(e.target.value)}} />\r\n            </td>            \r\n            <td><Button variant=\"warning\" onClick={() => closeEdit(keyId, dataUnq)}>Edit</Button></td>\r\n        </tr>\r\n    }\r\n    \r\n}\r\n\r\nexport default Task;","import React from 'react';\r\n\r\n// import { Container } from './styles';\r\n\r\nfunction DoneTask({ keyId, dataUnq }) {\r\n    return <tr key={keyId}>\r\n        <td colSpan=\"4\"><strike style={{ color: 'gray' }}>{dataUnq.task}</strike></td>\r\n    </tr>\r\n}\r\n\r\nexport default DoneTask;","import React from 'react';\r\nimport Table from 'react-bootstrap/Table'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Row from 'react-bootstrap/Row'\r\nimport { requestFirebase } from '../../util/RequestFir'\r\nimport { useTasks } from '../../context/tasks'\r\n//Component\r\nimport Task from './components/Task'\r\nimport DoneTask from './components/DoneTask'\r\n\r\nfunction ListTask() {\r\n    const { tasks, setTasks } = useTasks()\r\n\r\n    React.useEffect(() => {\r\n        //copia os dados do firebase para a imagem\r\n        requestFirebase.get().then((s) => {setTasks(s.tasks)})\r\n    },[setTasks])\r\n\r\n    return <Container style={{height: 750, overflowY:'scroll'}}>\r\n        <Row fluid=\"md\" className=\"justify-content-md-center\">\r\n            <Col md=\"12\">\r\n                <Table responsive=\"sm\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Task</th>\r\n                        <th>Do</th>\r\n                        <th>Edit</th>\r\n                        <th>Delete</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                        {tasks !== '' ? Object.values(tasks).reverse().map((map, index) => {\r\n                            if(map.do === true){\r\n                                //retorno da tarefa feita\r\n                                return <DoneTask key={Object.keys(tasks).reverse()[index]} keyId={Object.keys(tasks).reverse()[index]} dataUnq={map} />} \r\n                                else {\r\n                                //retorno da tarefa por fazer \r\n                                return <Task key={Object.keys(tasks).reverse()[index]} keyId={Object.keys(tasks).reverse()[index]} dataUnq={map} />}  \r\n                            }) : \r\n                        <tr>\r\n                            <td>Vazio</td>\r\n                        </tr>}\r\n                </tbody>\r\n            </Table>\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n}\r\n\r\n\r\n\r\nexport default ListTask;","import React from 'react';\r\nimport AddTask from './AddTask/AddTask'\r\nimport ListTask from './ListTask/ListTask'\r\n\r\nfunction Todo() {\r\n    return <div>\r\n        <br/>\r\n        <AddTask/>\r\n        <ListTask />\r\n    </div>;\r\n}\r\n\r\nexport default Todo;","import React from 'react';\r\nimport Todo from './components/Todo'\r\n\r\nfunction App() {\r\n    return ( <div>\r\n        <Todo />\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport TaskProvider from './context/tasks'\n\n\nReactDOM.render(\n    <TaskProvider><App /></TaskProvider>        \n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}